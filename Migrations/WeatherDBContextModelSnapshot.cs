// <auto-generated />
using System;
using DummyWebApi.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DummyWebApi.Migrations
{
    [DbContext(typeof(WeatherDBContext))]
    partial class WeatherDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DummyWebApi.Models.CountryStateWeatherModel", b =>
                {
                    b.Property<int>("SWMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SWMId"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SWMId");

                    b.ToTable("countryStateWeather");
                });

            modelBuilder.Entity("DummyWebApi.Models.WeatherModel", b =>
                {
                    b.Property<int>("WMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WMId"));

                    b.Property<int?>("CountryStateWeatherModelSWMId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("int");

                    b.Property<double>("WindSpeed")
                        .HasColumnType("float");

                    b.HasKey("WMId");

                    b.HasIndex("CountryStateWeatherModelSWMId");

                    b.ToTable("weather");
                });

            modelBuilder.Entity("DummyWebApi.Models.WeatherModel", b =>
                {
                    b.HasOne("DummyWebApi.Models.CountryStateWeatherModel", null)
                        .WithMany("WeatherDetails")
                        .HasForeignKey("CountryStateWeatherModelSWMId");
                });

            modelBuilder.Entity("DummyWebApi.Models.CountryStateWeatherModel", b =>
                {
                    b.Navigation("WeatherDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
