trigger:
- main

pool:
  name: 'MyProjectAgentPool'   # keep if you're using self-hosted agent
  # or use Microsoft-hosted agent:
  # vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
# Install the .NET SDK that matches your csproj <TargetFramework>
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.x'   # change to 7.x or 8.x if your project targets that

# Authenticate against private NuGet feeds (Azure Artifacts, etc.)
- task: NuGetAuthenticate@1

# Restore dependencies
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.sln'

# Build the solution
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.sln'
    arguments: '--configuration $(buildConfiguration)'

# Run tests (if you have test projects)
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

# Publish the Web API
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

# Publish build artifacts
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
