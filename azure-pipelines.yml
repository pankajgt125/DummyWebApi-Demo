trigger:
- main

pool:
  name: 'MyProjectAgentPool'   # use your own self-hosted pool

variables:
  buildConfiguration: 'Release'

steps:
# 1. Ensure .NET 9 SDK is installed on the agent
#    (downloads and installs into the agent's _work folder if not present)
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '9.x'
    includePreviewVersions: true   # needed until .NET 9 is GA

# 2. Authenticate against private NuGet feeds (remove if only using nuget.org)
- task: NuGetAuthenticate@1

# 3. Restore dependencies
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.sln'

# 4. Build the solution
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.sln'
    arguments: '--configuration $(buildConfiguration)'

# 5. Run tests (if you have test projects)
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

# 6. Publish the Web API
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

# 7. Publish build artifacts
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
